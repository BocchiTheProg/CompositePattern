Реалізація структурного патерну Composite (Компонувальник)
За допомогою цього патерну можна згруповувати об'єкти в деревоподібну структуру і працювати з нею ніби це одиничний об'єкт.
Патерн доречно використовувати у випадках коли сама модель програми може бути "побудована" в дерево, тобто в цій моделі є певна ієрархія.
Таким чином користоувачу(клієнту) байдуже з яким саме об'єктом він зараз працює: складним(Composite) чи простим (Leaf).
З перспективи користувача всі об'єкти в структурі трактуються однаково, тобто - вони(об'єкти) уніфіковані.
Така уніфікація є одначасно і плюсом, оскільки користувачу легше сприймати таку структуру та працювати з нею, і мінусом, через можливість утворення занадто загального інтерфейсу(Component).
Composite має спільні риси з патерном Decorator(Декоратор) та Chain of Responsibility(Ланцюжок обов'язків).
В коді представлено примітивний приклад використання патерну Composite для реалізації деякої файлової системи.
